name:        yaml
version:     0.11.11.0
synopsis:    Support for parsing and rendering YAML documents.
description: README and API documentation are available at <https://www.stackage.org/package/yaml>
category:    Data
author:      Michael Snoyman <michael@snoyman.com>, Anton Ageev <antage@gmail.com>,Kirill Simonov
maintainer:  Michael Snoyman <michael@snoyman.com>
license:     BSD3
github:      snoyberg/yaml
stability:   stable

tested-with:
- GHC == 9.6.2
- GHC == 9.4.5
- GHC == 9.2.8
- GHC == 9.0.2
- GHC == 8.10.7
- GHC == 8.8.4
- GHC == 8.6.5
- GHC == 8.4.4
- GHC == 8.2.2
- GHC == 8.0.2

extra-source-files:
- test/largest-string.yaml
- test/json.yaml
- test/resources/foo.yaml
- test/resources/bar.yaml
- test/resources/baz.yaml
- test/resources/accent/foo.yaml
- test/resources/loop/foo.yaml
- test/resources/loop/bar.yaml
- test/resources/empty.yaml
- test/resources/empty2.yaml
- README.md
- ChangeLog.md

flags:
  no-exe:
    description: don't install the yaml2json or json2yaml executables
    manual: false
    default: true
  no-examples:
    description: don't build the examples
    manual: false
    default: true

dependencies:
- base >=4.9.1 && <5 # GHC 8.0.2 and later, meaning that Data.Semigroup is in base
- bytestring >=0.9.1.4
- transformers >=0.1
- mtl
- conduit >=1.2.8 && <1.4
- resourcet >=0.3 && <1.4
- aeson >=0.11
- containers
- unordered-containers
- vector
- text
- attoparsec >=0.11.3.0
- scientific >= 0.3 # for Data.ByteString.Builder.Scientific
- filepath
- directory
- template-haskell
- libyaml >=0.1 && <0.2

ghc-options: -Wall -Wcompat

library:
  other-extensions:
  - LambdaCase
  source-dirs: src

executables:
  json2yaml:
    main: json2yaml.hs
    source-dirs: exe
    dependencies:
    - optparse-applicative
    - yaml
    when:
    - condition: flag(no-exe)
      buildable: false
  yaml2json:
    main: yaml2json.hs
    source-dirs: exe
    dependencies:
    - optparse-applicative
    - yaml
    when:
    - condition: flag(no-exe)
      buildable: false
    other-extensions:
    - CPP
    - LambdaCase
    - NamedFieldPuns
  examples:
    main: Main.hs
    source-dirs: examples
    when:
    - condition: flag(no-examples)
      then:
        buildable: false
      else:
        dependencies:
        - raw-strings-qq
        - yaml

tests:
  spec:
    main: Spec.hs
    source-dirs: test
    ghc-options: "-with-rtsopts=-K1K"
    cpp-options: -DTEST
    dependencies:
    - hspec >=1.3
    - HUnit
    - yaml
    - directory
    - mockery
    - base-compat
    - temporary
    - raw-strings-qq
